amcl:
  ros__parameters:
    use_sim_time: false
    alpha1: 0.5
    alpha2: 0.2 
    alpha3: 0.2
    alpha4: 0.5
    alpha5: 0.2
    base_frame_id: "base_link"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 5.0
    laser_min_range: 0.12
    laser_model_type: "likelihood_field"
    max_beams: 30
    max_particles: 500
    min_particles: 100
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "differential"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 0.5
    update_min_a: 0.2
    update_min_d: 0.05
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    scan_topic: scan
    map_topic: map

bt_navigator:
  ros__parameters:
    use_sim_time: false
    global_frame: map
    robot_base_frame: base_link
    odom_topic: odom  # Changed from /odometry/filtered
    transform_tolerance: 0.5
    default_bt_xml_filename: "navigate_w_replanning_and_recovery.xml"
    bt_loop_duration: 10
    default_server_timeout: 20
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_distance_traveled_condition_bt_node

controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 5.0  # Reduced from 20.0 for stability
    min_x_velocity_threshold: 0.01  # Increased threshold
    min_y_velocity_threshold: 0.0
    min_theta_velocity_threshold: 0.03  # Increased threshold
    failure_tolerance: 1.0  # More forgiving
    
    # Progress checker - more lenient
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.05  # Reduced - easier to satisfy
      movement_time_allowance: 10.0   # Increased - more time allowed
    
    # Goal checker - increased tolerance
    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25        # Increased from 0.05
      yaw_goal_tolerance: 0.25       # Increased from 0.05
      stateful: true
    
    controller_plugins: ["FollowPath"]

    # Local planner tuned for small, slow robot
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: true
      
      # Velocity limits - more forgiving
      min_vel_x: -0.05  # Allow reverse motion
      max_vel_x: 0.15   # Keep moderate forward speed
      min_vel_y: 0.0
      max_vel_y: 0.0
      min_vel_theta: -0.5
      max_vel_theta: 0.5
      
      # Acceleration limits - gentler
      acc_lim_x: 0.2
      acc_lim_y: 0.0
      acc_lim_theta: 0.3
      decel_lim_x: -0.2
      decel_lim_y: 0.0
      decel_lim_theta: -0.3
      
      # Trajectory generation
      vx_samples: 10        # Reduced samples
      vy_samples: 0
      vtheta_samples: 10    # Reduced samples
      sim_time: 2.0         # Increased from 1.5 - look further ahead
      linear_granularity: 0.05
      angular_granularity: 0.025
      
      # Tolerances
      transform_tolerance: 0.5
      xy_goal_tolerance: 0.25
      trans_stopped_velocity: 0.05
      short_circuit_trajectory_evaluation: true
      stateful: true
      
      # Scoring weights - tuned to favor forward motion
      critics: ["ObstacleFootprint", "GoalAlign", "PathAlign", "GoalDist", "PathDist"]
      ObstacleFootprint.scale: 0.01
      ObstacleFootprint.inflation_radius: 0.15
      PathAlign.scale: 16.0           # Reduced from 32.0
      GoalAlign.scale: 12.0           # Reduced from 24.0
      PathAlign.forward_point_distance: 0.3
      GoalAlign.forward_point_distance: 0.3
      PathDist.scale: 16.0            # Reduced from 32.0
      GoalDist.scale: 12.0            # Reduced from 24.0

planner_server:
  ros__parameters:
    use_sim_time: false
    planner_plugins: ["GridBased"]
    
    # Global planner with higher tolerance
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5         # Larger tolerance
      use_astar: true
      allow_unknown: true    # Allow planning through unknown space

recoveries_server:
  ros__parameters:
    use_sim_time: false
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    
    # Recovery behaviors - adjusted to be more cautious
    recovery_plugins: ["spin", "backup", "wait"]
    
    # Spin parameters
    spin:
      plugin: "nav2_recoveries/Spin"
      max_rotational_vel: 0.3      # Reduced from 1.0
      min_rotational_vel: 0.1      # Reduced from 0.4
      rotational_acc_lim: 0.3      # Reduced from 0.8
    
    # Backup parameters
    backup:
      plugin: "nav2_recoveries/BackUp"
      speed: 0.05               # Slow backup speed
      backup_dist: 0.2          # Slightly longer backup
    
    # Wait parameters  
    wait:
      plugin: "nav2_recoveries/Wait"
      wait_time: 5.0
      
    # Shared parameters
    global_frame: odom
    robot_base_frame: base_link
    transform_timeout: 0.5      # More forgiving
    simulate_ahead_time: 2.0
    
local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 2.0        # Reduced for stability
      publish_frequency: 1.0       # Reduced for stability
      global_frame: odom
      robot_base_frame: base_link
      use_sim_time: false
      rolling_window: true
      width: 2                     # Reduced from 3
      height: 2                    # Reduced from 3
      resolution: 0.05
      robot_radius: 0.15
      plugins: ["obstacle_layer", "inflation_layer"]
      
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: true
          marking: true
          data_type: "LaserScan"
          raytrace_max_range: 5.0      # Reduced range
          raytrace_min_range: 0.12
          obstacle_max_range: 4.5      # Reduced range
          obstacle_min_range: 0.12
          inf_is_valid: false

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 5.0       # Less aggressive scaling (was 10.0)
        inflation_radius: 0.15         # Reduced radius for narrow passages

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 0.5         # Reduced frequency
      publish_frequency: 0.5        # Reduced frequency
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: false
      robot_radius: 0.15
      resolution: 0.05
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: true
          marking: true
          data_type: "LaserScan"
          raytrace_max_range: 5.0     # Reduced range
          raytrace_min_range: 0.12
          obstacle_max_range: 4.5     # Reduced range
          obstacle_min_range: 0.12
          inf_is_valid: false

      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: true

      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 5.0      # Less aggressive scaling (was 10.0)
        inflation_radius: 0.15        # Reduced radius for narrow passages

map_server:
  ros__parameters:
    use_sim_time: false
    yaml_filename: ""

lifecycle_manager:
  ros__parameters:
    use_sim_time: false
    autostart: true
    node_names: [
      'map_server',
      'amcl',
      'controller_server',
      'planner_server',
      'recoveries_server',
      'bt_navigator'
    ]